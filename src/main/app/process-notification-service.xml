<?xml version="1.0" encoding="utf-8"?>

<mule 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd 
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd 
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.muleforge.org/smooks/schema/mule-module-smooks http://dist.muleforge.org/smooks/schema/mule-module-smooks/1.3/mule-module-smooks.xsd 
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd "
 version="EE-3.3.1">
    
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logWarning">
		<spring:property name="logType"     value="resend-warning"/>
		<spring:property name="logLevel"    value="WARNING"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>

    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logError">
		<spring:property name="logType"     value="resend-error"/>
		<spring:property name="logLevel"    value="ERROR"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>

<!-- 
	xmlns:st-logger="http://www.mulesoft.org/schema/mule/st-logger" 
http://www.mulesoft.org/schema/mule/st-logger http://www.mulesoft.org/schema/mule/st-logger/current/mule-st-logger.xsd 
    <st-logger:config name="St_Logger" doc:name="St Logger"/>
 -->

    <rollback-exception-strategy name="nnn_Rollback_Exception_Strategy" maxRedeliveryAttempts="${SOITOOLKIT_MULE_AMQ_MAX_REDELIVERIES}">

		<transformer ref="logWarning" doc:name="Log Warning" />
<!-- 
        <st-logger:log-warning config-ref="St_Logger" doc:name="Log warning" message="Send failed, will retry in ${SOITOOLKIT_MULE_AMQ_REDELIVERY_DELAY} ms."/>
 -->

        <on-redelivery-attempts-exceeded doc:name="Redelivery exhausted">

			<transformer ref="logError" doc:name="Log Error" />
<!-- 
	        <st-logger:log-error config-ref="St_Logger" doc:name="Log error" message="Exceeded max no of retries, place payload on DLQ: ${${PROCESS-NOTIFICATION_QUEUE_DLQE}}"/>
 -->

            <jms:outbound-endpoint queue="${PROCESS-NOTIFICATION_QUEUE_DLQ}" connector-ref="soitoolkit-jms-connector" transformer-refs="strToJms logMsgOut" doc:name="JMS">
                <jms:transaction action="ALWAYS_JOIN"/>
            </jms:outbound-endpoint>
    
        </on-redelivery-attempts-exceeded>

    </rollback-exception-strategy>
    
	<flow name="process-notification-service" doc:name="process-notification-service">

		<https:inbound-endpoint 
            connector-ref="soitoolkit-https-connector"
			address="${PROCESS-NOTIFICATION_INBOUND_URL}"
			exchange-pattern="request-response"
			transformer-refs="objToStr logReqIn"
			responseTransformer-refs="createSoapFaultIfException logRespOut" doc:name="HTTP">		</https:inbound-endpoint>
		<cxf:proxy-service  			service="ProcessNotificationResponderService"        	wsdlLocation="classpath:/interactions/ProcessNotificationInteraction/ProcessNotificationInteraction_1.0_RIVTABP21.wsdl"			namespace="urn:riv:itintegration:engagementindex:ProcessNotification:1:rivtabp21" doc:name="SOAP">		</cxf:proxy-service>

        <response>
            <custom-transformer doc:name="transform-response" class="se.skl.tp.aggregatingservices.crm.scheduling.getaggregatedsubjectofcareschedule.processnotification.ProcessNotificationResponseTransformer"/>
        </response>
        
        <custom-transformer doc:name="transform-request" class="se.skl.tp.aggregatingservices.crm.scheduling.getaggregatedsubjectofcareschedule.processnotification.ProcessNotificationRequestTransformer"/>
		<jms:outbound-endpoint connector-ref="soitoolkit-jms-connector" queue="${PROCESS_NOTIFICATION_QUEUE}" transformer-refs="objToStr strToJms logReqOut" doc:name="JMS"/> 
 <!-- 
 		<custom-exception-strategy class="org.soitoolkit.commons.mule.error.ServiceExceptionStrategy"/>
 -->
	</flow>


    <flow name="update-cache-flow" doc:name="jmsToJms-res-serviceFlow1">

        <jms:inbound-endpoint queue="${PROCESS_NOTIFICATION_QUEUE}" connector-ref="soitoolkit-jms-connector" transformer-refs="jmsToStr" doc:name="JMS">
            <jms:transaction action="ALWAYS_BEGIN"/>
        </jms:inbound-endpoint>

<!-- 
        <soitoolkitlogger:log-info config-ref="Soitoolkitlogger" message="msg-in: #[payload]" doc:name="Soitoolkitlogger"/>
 -->

        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[println "Try transform: $payload"
message]]></scripting:text>
            </scripting:script>
        </scripting:component>

        <custom-transformer class="se.skl.tp.aggregatingservices.crm.scheduling.getaggregatedsubjectofcareschedule.processnotification.ProcessNotificationRequestListTransformer" doc:name="Java"/>

        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[println "Transform result: $payload"
message]]></scripting:text>
            </scripting:script>
        </scripting:component>

		<flow-ref name="request-reply-flow" doc:name="request-reply-flow"/>

<!-- 
        <exception-strategy ref="Rollback_Exception_Strategy" doc:name="Reference Exception Strategy"/>
 -->

	    <rollback-exception-strategy maxRedeliveryAttempts="${SOITOOLKIT_MULE_AMQ_MAX_REDELIVERIES}">
	
			<transformer ref="logWarning" doc:name="Log Warning" />
<!-- 
	        <st-logger:log-warning config-ref="St_Logger" doc:name="Log warning" message="Send failed, will retry in ${SOITOOLKIT_MULE_AMQ_REDELIVERY_DELAY} ms."/>
 -->
	
	        <on-redelivery-attempts-exceeded doc:name="Redelivery exhausted">
	
				<transformer ref="logError" doc:name="Log Error" />
<!-- 
		        <st-logger:log-error config-ref="St_Logger" doc:name="Log error" message="Exceeded max no of retries, place payload on DLQ: ${${PROCESS-NOTIFICATION_QUEUE_DLQE}}"/>
 -->
	
	            <jms:outbound-endpoint queue="${PROCESS-NOTIFICATION_QUEUE_DLQ}" connector-ref="soitoolkit-jms-connector" transformer-refs="strToJms logMsgOut" doc:name="JMS">
	                <jms:transaction action="ALWAYS_JOIN"/>
	            </jms:outbound-endpoint>
	    
	        </on-redelivery-attempts-exceeded>
	
	    </rollback-exception-strategy>
    </flow>

</mule>